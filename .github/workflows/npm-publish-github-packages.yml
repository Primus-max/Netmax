name: Build and Publish

on:
  push:
    branches:
      - dev
  # pull_request:
  #   branches:
  #     - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Поддержка обеих платформ

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install
        timeout-minutes: 60  # Установлено время ожидания на 60 минут

      - name: Build the app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build -- -l --publish=never  # Сборка для Linux

      - name: Build the app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build -- -w --publish=never  # Сборка для Windows

      - name: List files after build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "Files in dist directory:"
          ls -R dist/

      - name: List files after build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "Files in dist directory:"
          dir dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: netmax-build-${{ matrix.os }}  # Уникальное имя для артефактов
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code again
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Полная история для создания тега

      - name: Create a tag
        run: |
          git tag v${{ github.run_number }}  # Создает тег на основе номера сборки
          git push origin v${{ github.run_number }}  # Отправляет тег на GitHub

      - name: Download build artifacts (Linux)
        if: startsWith(github.ref, 'refs/tags/v')  # Проверка, что это тег
        uses: actions/download-artifact@v3
        with:
          name: netmax-build-ubuntu-latest  # Загружаем артефакты для Linux
          path: ./dist

      - name: Download build artifacts (Windows)
        if: startsWith(github.ref, 'refs/tags/v')  # Проверка, что это тег
        uses: actions/download-artifact@v3
        with:
          name: netmax-build-windows-latest  # Загружаем артефакты для Windows
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: v${{ github.run_number }}  # Используем номер сборки для имени тега
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: Build and Publish

# on:
#   push:
#     branches:
#       - dev
#   # pull_request:
#   #   branches:
#   #     - main

# permissions:
#   contents: write

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "lts/*"

#       - name: Install dependencies
#         run: npm install
#         timeout-minutes: 60

#       - name: Build the app
#         run: npm run build -- -l --publish=never 

#       - name: List files after build
#         run: |
#           echo "Files in dist directory:"
#           ls -R dist/

#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: netmax-build
#           path: dist/

#   release:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout code again
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  

#       - name: Create a tag
#         run: |
#           git tag v${{ github.run_number }}  # Создает тег на основе номера сборки
#           git push origin v${{ github.run_number }}  # Отправляет тег на GitHub

#       - name: Download build artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: netmax-build
#           path: ./dist

#       - name: Create GitHub Release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: dist/*
#           tag_name: v${{ github.run_number }}  
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
